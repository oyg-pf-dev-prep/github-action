name: AWS ECR Login v1

on:
  workflow_dispatch:
    inputs:
      repository-uri:
        required: false
        type: string
        default: ''
      role-name:
        required: false
        type: string
        default: ''
      aws-region:
        required: false
        type: string
        default: 'ap-northeast-2'
  
  workflow_call:
    inputs:
      repository-uri:
        required: false
        type: string
        default: ''
      role-name:
        required: false
        type: string
        default: ''
      aws-region:
        required: false
        type: string
        default: 'ap-northeast-2'
        
jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write  # OIDC 토큰을 요청할 수 있도록 권한을 설정
      contents: read   # actions/checkout을 위한 권한

    steps:
      # 1. 입력된 branch 값이 없는 경우 기본값으로 설정
      - name: Set default inputs
        id: default_inputs
        run: |
          if [ -z "${{ inputs.repository-uri }}" ]; then
            echo "Using default repository-uri=${{ vars.PROD_ECR_URI }}"
            echo "repository-uri=${{ vars.PROD_ECR_URI }}" >> $GITHUB_OUTPUT
          else
            echo "Using provided repository-uri=${{ inputs.repository-uri }}"
            echo "repository-uri=${{ inputs.repository-uri }}" >> $GITHUB_OUTPUT
          fi
          if [ -z "${{ inputs.role-name }}" ]; then
            echo "Using default role-name=${{ vars.PROD_GITHUB_ROLE_ARN }}"
            echo "role-name=${{ vars.PROD_GITHUB_ROLE_ARN }}" >> $GITHUB_OUTPUT
          else
            echo "Using provided role-name=${{ inputs.role-name }}"
            echo "role-name=${{ inputs.role-name }}" >> $GITHUB_OUTPUT
          fi      
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.default_inputs.outputs.role-name }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ${{ inputs.aws-region }} | docker login --username AWS --password-stdin ${{ steps.default_inputs.outputs.repository-uri }}

    outputs:
      repository-uri: ${{ steps.default_inputs.outputs.repository-uri }}
