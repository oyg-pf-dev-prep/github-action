# This is a basic workflow to help you get started with Actions

name: Deploy to Stage

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  notify-commits:
    # runs-on: arc-runner-set
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 전체 히스토리 가져오기

      - name: Get List of Commits
        id: get_commits
        run: |
          git fetch origin stage  # stage 브랜치 정보 가져오기
          commits=$(git log --oneline origin/stage..origin/dev | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "$commits"
          echo "::set-output name=commits::$commits"

      - name: Create Jira Ticket
        id: create_jira_ticket
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://oyitsm.cj.net/jira/rest/api/2/issue"
          method: "POST"
          customHeaders: |
            {
              "Authorization": "Bearer ${{ secrets.JIRA_ACCESS_TOKEN_TEST }}",
              "Content-Type": "application/json"
            }
          data: |
            {
              "fields": {
                "project": {
                  "key": "GITINIT"
                },
                "summary": "Deploy to stage env",
                "issuetype": {
                  "name": "Task"
                },
                "customfield_15405": [
                  {
                      "self": "https://oyitsm.cj.net/jira/rest/api/2/customFieldOption/15615",
                      "value": "글로벌 플랫폼 개발팀",
                      "id": "15615",
                      "disabled": false
                  },
                  {
                      "self": "https://oyitsm.cj.net/jira/rest/api/2/customFieldOption/15616",
                      "value": "글로벌 개인화 개발팀",
                      "id": "15616",
                      "disabled": false
                  }
                ]
              }
            }

      - name: Send slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: "C07R2FM9X5F"
          payload: |
            {
              "text": "Merge from `dev` to `stage`",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Jira Ticket ${{ fromJson(steps.create_jira_ticket.outputs.response).name }}: \n ${{ fromJson(steps.create_jira_ticket.outputs.response).self }}  :\n${{ steps.get_commits.outputs.commits }}\n"
                  }
                }
              ]
            }

        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
